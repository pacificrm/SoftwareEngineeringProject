{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"start\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StartPage = _resolveComponent(\"StartPage\");\n  const _component_LoginSignup = _resolveComponent(\"LoginSignup\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <h1>This is an about page</h1> \"), _createCommentVNode(\" <StartPage /> \"), _withDirectives(_createVNode(_component_StartPage, null, null, 512 /* NEED_PATCH */), [[_vShow, $data.t]]), _withDirectives(_createVNode(_component_LoginSignup, {\n    onSignup: _cache[0] || (_cache[0] = $event => ($data.signupData = $event, $options.register())),\n    onLogin: _cache[1] || (_cache[1] = $event => (_ctx.loginData = $event, $options.login()))\n  }, null, 512 /* NEED_PATCH */), [[_vShow, !$data.t]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_StartPage","$data","t","_component_LoginSignup","onSignup","_cache","$event","signupData","$options","register","onLogin","_ctx","loginData","login"],"sources":["/home/agustus/mad2-project/frontend/src/views/StartView.vue"],"sourcesContent":["<template>\n  <div class=\"start\">\n    <!-- <h1>This is an about page</h1> -->\n    <!-- <StartPage /> -->\n    <StartPage v-show=\"t\" />\n    <LoginSignup\n      v-show=\"!t\"\n      @signup=\"(signupData = $event), register()\"\n      @login=\"(loginData = $event), login()\"\n    />\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport StartPage from \"@/components/StartPage.vue\";\nimport LoginSignup from \"@/components/LoginSignup.vue\";\n// import { clearInterval } from \"timers\";\n\nexport default {\n  name: \"StartView\",\n  components: {\n    StartPage,\n    LoginSignup,\n  },\n\n  data() {\n    return {\n      t: true,\n      signupData: {\n        email: null,\n        username: null,\n        password1: null,\n        password2: null,\n        error_1: \"\",\n        error_2: \"\",\n      },\n    };\n  },\n  async created() {\n    setTimeout(() => (this.t = false), 7000);\n    sessionStorage.clear();\n    localStorage.clear();\n  },\n  // async created() {\n\n  // },\n  async updated() {\n    sessionStorage.clear();\n    localStorage.clear();\n  },\n  methods: {\n    async register() {\n      console.log(this.signupData);\n      if (\n        this.emailValidation(this.signupData.email) &&\n        this.passValidation(this.signupData.password1) &&\n        this.passConfirmation(\n          this.signupData.password1,\n          this.signupData.password2\n        )\n      ) {\n        try {\n          fetch(\"http://127.0.0.1:5000/api/user\", {\n            mode: \"cors\",\n            method: \"POST\",\n            headers: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              email: this.signupData.email,\n              username: this.signupData.username,\n              password1: this.signupData.password1,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (data) => {\n              console.log(data);\n              this.$router.go(\"/\");\n              alert(\"Signup succesfully!! login to continue.\");\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        } catch (error) {\n          console.log(\"Registration Failed: \", error);\n        }\n      } else if (!this.emailValidation(this.signupData.email)) {\n        this.error_1 = \"Please enter a valid email\";\n      } else if (!this.passValidation(this.signupData.password1)) {\n        this.error_1 = \"Password requires atleast 8 characters.\";\n      } else if ((this.signupData.password1, this.signupData.password2)) {\n        this.error_1 = \"Password didn't matched!!\";\n      }\n    },\n    emailValidation: function (email) {\n      var result =\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/;\n      return result.test(email);\n    },\n    passValidation: function (passs) {\n      var result = /.{8,}/;\n      return result.test(passs);\n    },\n    passConfirmation: function (passs1, passs2) {\n      if (passs1 == passs2) {\n        return true;\n      }\n      return false;\n    },\n    async login() {\n      try {\n        fetch(\"http://127.0.0.1:5000/login?include_auth_token\", {\n          mode: \"cors\",\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: this.email,\n            password: this.password,\n            is_authenticated: true,\n          }),\n        })\n          .then((resp) => resp.json())\n          .then(async (data) => {\n            const { response } = data;\n            console.log(data);\n            if (response.errors) {\n              if (response.errors[1]) {\n                this.error_1 = response.errors[1];\n              }\n              this.error_2 = response.errors[0];\n              console.log(this.error_1, this.error_2);\n            } else {\n              this.auth = response.user.authentication_token;\n              sessionStorage.setItem(\"auth-token\", this.auth);\n              sessionStorage.setItem(\"email\", this.email);\n              this.$router.push(\"home\");\n              console.log(\"its homepage\");\n            }\n          })\n          .catch((error) => {\n            console.log(\"some error first time\", error);\n          });\n      } catch (error) {\n        console.log(\"No way home: \", error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;;;uBAAlBC,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,oCAAuC,EACvCA,mBAAA,mBAAsB,E,gBACtBC,YAAA,CAAwBC,oBAAA,sC,SAALC,KAAA,CAAAC,CAAC,E,mBACpBH,YAAA,CAIEI,sBAAA;IAFCC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,KAAGL,KAAA,CAAAM,UAAU,GAAGD,MAAM,EAAGE,QAAA,CAAAC,QAAQ;IACvCC,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,KAAGK,IAAA,CAAAC,SAAS,GAAGN,MAAM,EAAGE,QAAA,CAAAK,KAAK;6CAF1BZ,KAAA,CAAAC,CAAC,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}