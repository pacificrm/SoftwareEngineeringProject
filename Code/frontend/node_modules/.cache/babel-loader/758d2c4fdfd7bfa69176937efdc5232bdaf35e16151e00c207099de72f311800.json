{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findAll = exports.existsOne = exports.findOne = exports.findOneChild = exports.find = exports.filter = void 0;\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Search a node and its children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction filter(test, node, recurse, limit) {\n  if (recurse === void 0) {\n    recurse = true;\n  }\n  if (limit === void 0) {\n    limit = Infinity;\n  }\n  if (!Array.isArray(node)) node = [node];\n  return find(test, node, recurse, limit);\n}\nexports.filter = filter;\n/**\n * Search an array of node and its children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction find(test, nodes, recurse, limit) {\n  var result = [];\n  for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n    var elem = nodes_1[_i];\n    if (test(elem)) {\n      result.push(elem);\n      if (--limit <= 0) break;\n    }\n    if (recurse && (0, domhandler_1.hasChildren)(elem) && elem.children.length > 0) {\n      var children = find(test, elem.children, recurse, limit);\n      result.push.apply(result, children);\n      limit -= children.length;\n      if (limit <= 0) break;\n    }\n  }\n  return result;\n}\nexports.find = find;\n/**\n * Finds the first element inside of an array that matches a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nfunction findOneChild(test, nodes) {\n  return nodes.find(test);\n}\nexports.findOneChild = findOneChild;\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first child node that passes `test`.\n */\nfunction findOne(test, nodes, recurse) {\n  if (recurse === void 0) {\n    recurse = true;\n  }\n  var elem = null;\n  for (var i = 0; i < nodes.length && !elem; i++) {\n    var checked = nodes[i];\n    if (!(0, domhandler_1.isTag)(checked)) {\n      continue;\n    } else if (test(checked)) {\n      elem = checked;\n    } else if (recurse && checked.children.length > 0) {\n      elem = findOne(test, checked.children, true);\n    }\n  }\n  return elem;\n}\nexports.findOne = findOne;\n/**\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nfunction existsOne(test, nodes) {\n  return nodes.some(function (checked) {\n    return (0, domhandler_1.isTag)(checked) && (test(checked) || checked.children.length > 0 && existsOne(test, checked.children));\n  });\n}\nexports.existsOne = existsOne;\n/**\n * Search and array of nodes and its children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nfunction findAll(test, nodes) {\n  var _a;\n  var result = [];\n  var stack = nodes.filter(domhandler_1.isTag);\n  var elem;\n  while (elem = stack.shift()) {\n    var children = (_a = elem.children) === null || _a === void 0 ? void 0 : _a.filter(domhandler_1.isTag);\n    if (children && children.length > 0) {\n      stack.unshift.apply(stack, children);\n    }\n    if (test(elem)) result.push(elem);\n  }\n  return result;\n}\nexports.findAll = findAll;","map":{"version":3,"names":["domhandler_1","require","filter","test","node","recurse","limit","Infinity","Array","isArray","find","exports","nodes","result","_i","nodes_1","length","elem","push","hasChildren","children","apply","findOneChild","findOne","i","checked","isTag","existsOne","some","findAll","stack","shift","_a","unshift"],"sources":["https://raw.githubusercontent.com/fb55/domutils/f7e357b5c210b6731c2a60e0b7b3cfaa1f96b706/src/querying.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}